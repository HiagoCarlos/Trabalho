<!DOCTYPE html>
<html lang="pt-BR" data-theme="<%= userPreferences?.theme || 'light' %>">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/auth.css">
</head>
<body>
    <div class="auth-container"
         data-active-tab="<%= activeTab %>"
         data-csrf-token="<%= csrfToken %>"
         data-user-logged-in="<%= (typeof session !== 'undefined' && session && session.user) ? 'true' : 'false' %>"
         id="authDataContainer"
    >
        <div class="theme-toggle-container">
            <span class="theme-icon">🌙</span>
            <label class="theme-toggle">
                <input type="checkbox" id="theme-toggle" <%= userPreferences?.theme === 'dark' ? 'checked' : '' %>>
                <span class="theme-slider"></span>
            </label>
            <span class="theme-icon">☀️</span>
        </div>

        <div class="auth-card">
            <header class="auth-header">
                <h1 class="auth-title"><%= title %></h1>
                <p class="auth-subtitle">Acesse sua conta ou registre-se gratuitamente.</p>
            </header>

            <nav class="auth-tabs">
                <a href="#login" class="auth-tab <%= activeTab === 'login' ? 'active' : '' %>" data-tab="login">Login</a>
                <a href="#register" class="auth-tab <%= activeTab === 'register' ? 'active' : '' %>" data-tab="register">Registrar</a>
            </nav>

            <div class="auth-content">
                <% if (messages.error && messages.error.length > 0) { %>
                    <div class="alert alert-error">
                        <span class="alert-icon">⚠️</span> <%= messages.error[0] %>
                    </div>
                <% } %>
                <% if (messages.success && messages.success.length > 0) { %>
                    <div class="alert alert-success">
                        <span class="alert-icon">✅</span> <%= messages.success[0] %>
                    </div>
                <% } %>

                <form id="login-form" action="/login" method="POST" class="auth-form <%= activeTab === 'login' ? '' : 'hidden' %>" novalidate>
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                    <div class="form-group">
                        <label for="login-email" class="form-label">Email</label>
                        <input type="email" id="login-email" name="email" class="form-control"
                               value="<%= formData && formData.email ? formData.email : '' %>" required>
                    </div>
                    <div class="form-group">
                        <label for="login-password" class="form-label">Senha</label>
                        <input type="password" id="login-password" name="password" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <input type="checkbox" id="rememberMe" name="rememberMe" value="true"
                               <%= formData && formData.rememberMe ? 'checked' : '' %>>
                        <label for="rememberMe" class="form-label" style="display: inline; margin-left: 8px; font-weight: normal;">
                            Lembrar de mim
                        </label>
                    </div>
                    <button type="submit" class="btn btn-primary">
                        <span class="btn-text">Entrar</span>
                    </button>
                    <div class="auth-footer" style="margin-top: 15px;">
                        <a href="#" class="auth-link">Esqueceu sua senha?</a>
                    </div>
                </form>

                <form id="register-form" action="/register" method="POST" class="auth-form <%= activeTab === 'register' ? '' : 'hidden' %>" novalidate>
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                    <div class="form-group">
                        <label for="register-name" class="form-label">Nome</label> <input type="text" id="register-name" name="name" class="form-control"
                               value="<%= formData && formData.name ? formData.name : '' %>" required>
                    </div>
                    <div class="form-group">
                        <label for="register-email" class="form-label">Email</label>
                        <input type="email" id="register-email" name="email" class="form-control"
                               value="<%= formData && formData.email && activeTab === 'register' ? formData.email : '' %>" required>
                    </div>
                    <div class="form-group">
                        <label for="register-password" class="form-label">Senha</label>
                        <input type="password" id="register-password" name="password" class="form-control" required>
                        <small class="password-hint">Mínimo de 6 caracteres.</small>
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword" class="form-label">Confirmar Senha</label>
                        <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary">
                        <span class="btn-text">Criar Conta</span>
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const authDataContainer = document.getElementById('authDataContainer');
        const activeTabFromData = authDataContainer.dataset.activeTab;
        const csrfTokenFromData = authDataContainer.dataset.csrfToken;
        const userIsLoggedInFromData = authDataContainer.dataset.userLoggedIn === 'true';

        // Gerenciamento de abas
        const tabs = document.querySelectorAll('.auth-tab');
        const loginForm = document.getElementById('login-form');
        const registerForm = document.getElementById('register-form');

        function setActiveTab(targetTabId) {
            tabs.forEach(tab => {
                if (tab.getAttribute('data-tab') === targetTabId) {
                    tab.classList.add('active');
                } else {
                    tab.classList.remove('active');
                }
            });

            if (targetTabId === 'login') {
                loginForm.classList.remove('hidden');
                registerForm.classList.add('hidden');
            } else if (targetTabId === 'register') {
                loginForm.classList.add('hidden');
                registerForm.classList.remove('hidden');
            }
        }

        // Set initial tab
        let initialTab = activeTabFromData;
        if (window.location.hash) {
            const hashTab = window.location.hash.substring(1);
            if (hashTab === 'login' || hashTab === 'register') {
                initialTab = hashTab;
            }
        }
        setActiveTab(initialTab);

        tabs.forEach(tab => {
            tab.addEventListener('click', function(event) {
                event.preventDefault();
                const targetTabId = this.getAttribute('data-tab');
                setActiveTab(targetTabId);
                history.pushState(null, null, '#' + targetTabId);
            });
        });

         window.addEventListener('hashchange', function() {
            const hashTab = window.location.hash.substring(1);
            if (hashTab === 'login' || hashTab === 'register') {
                setActiveTab(hashTab);
            } else if (!hashTab && activeTabFromData) { 
                setActiveTab(activeTabFromData);
            }
        });


        const themeToggle = document.getElementById('theme-toggle');
        const htmlElement = document.documentElement;

        const savedTheme = localStorage.getItem('theme') || (userIsLoggedInFromData ? (document.querySelector('html').dataset.theme || 'light') : 'light');
        if (savedTheme) {
            htmlElement.setAttribute('data-theme', savedTheme);
            themeToggle.checked = savedTheme === 'dark';
        }


        themeToggle.addEventListener('change', function() {
            const newTheme = this.checked ? 'dark' : 'light';
            htmlElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);

            if (userIsLoggedInFromData) {
                saveThemePreference(newTheme);
            }
        });

        function saveThemePreference(theme) {
            fetch('/save-preferences', { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'CSRF-Token': csrfTokenFromData 
                },
                body: JSON.stringify({ theme: theme })
            })
            .then(response => {
                if (!response.ok) {
                    
                    console.error('Resposta não OK ao salvar preferência de tema:', response.status);
                    return response.json().then(errData => Promise.reject(errData));
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    console.error('Erro ao salvar preferência de tema no servidor:', data.error);
                } else {
                    console.log('Preferência de tema salva no servidor.');
                }
            })
            .catch(error => {
                console.error('Erro na requisição para salvar preferência de tema:', error);
            });
        }

      
        const forms = document.querySelectorAll('.auth-form'); 
        forms.forEach(form => {
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated'); r
            }, false);
        });

    });
    </script>
</body>
</html>